return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bf)local bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=96,33,45,69,58,53,55,17,68,13,64,13,54,97,95,86,68,99,59,24,97,61,18,94,59,41,21,40,63,82,39,61,48,91,47,51,99,92,20,78,87,38,28,39,17,40,38,78,68 while bf~=63 do if bg>=698 then if bg>=998 then if bg>=1162 then if bg<=1212 then if bg>=1197 then if bg<1204 then bx={}bg=1212 else cr={}bg=1248 end else cm=function(cs,ct,ct)local ct,cu,cv,cw,cx,cy,cz,da=85,53,45,25,21,98,18,39,21,84,58,66,13,79,97,11,41,55,55,38,43,91,61,62,59 while ct~=41 do if cu>=366 then if cu<=462 then if cu>=436 then if cu<456 then for db=1,by()do cy[db-1]=cm();end cu=462 else cu=486 do cv[27]=cy;end end else if cu<401 then for db=1,cx do local dc,dd,de,df=82,56,27,24,56,84,11,49,54,37,24,43 while dc~=36 do if dd>=138 then if dd<=138 then if(not(de~=0))then df=(not(cp()==0));elseif(3==de)then df=cn();elseif(4==de)then do df=bv();end elseif(1==de)then df=cs[bv()];end;dd=186 else if dd<220 then dd=223 cz[db]=df;else break end end else if dd>=77 then if dd>79 then dd=138 do df=nil end else dd=96 de=cp()end else dd=77 de,df=nil end end end end cu=404 else cu=436 cv[186]=cz end end else if cu<=508 then if cu<499 then for cs=1,by()do local db,dc,dd,de,df,dg=85,45,81,92,17,89,61,57,80,70,34,33,94,73,81,74,83,12,47,31,27,88,42,74,85,71 while db~=44 do if dc>=339 then if dc>=463 then if dc>=537 then if dc<=537 then dc=578 do df[j]=-df[41]end else if dc>586 then db=44;else dc=593 da[cs]=df;end end else if dc>468 then df[49]=-df[q]dc=537 else dc=509 df[149]=bu(dd,12,20);end end else if dc<=371 then if dc>343 then dc=406 df[66]=bu(dd,3,11);else dc=371 do df[60]=bu(de,1,11);end end else if dc>415 then df[41]=bu(dd,21,29);dc=463 else do df[96]=bu(de,12,33);end dc=426 end end end else if dc>=181 then if dc<=215 then if dc<208 then dc=215 while cp()==1 do for j=1,cp()do df[136][j]={cp()==0,by()}end break end else dc=263 dd=by()end else if dc>=301 then if dc<313 then dg=bu(dd,1,2)dc=322 else df[26]=dg dc=339 end else dc=301 de=by()end end else if dc<=67 then if dc<58 then dd,de,df,dg=nil dc=67 else dc=105 do df={{},nil,nil}end end else if dc>114 then dc=181 do df[136]={};end else dc=141 df[69]=cp();end end end end end end cu=508 else cu=550 do cv[79]=da;end end else if cu<=550 then cu=598 cv[24]=cp();else if cu>605 then ct=41;else cu=622 return cv;end end end end else if cu>=217 then if cu>=289 then if cu<312 then cu=317 cx=by()else cz={}cu=366 end else if cu<247 then cu=256 cw=by()else cu=289 for j=(#cl+1),(#cl+cw)do local q,cs,ct,db,dc=85,52,82,61,47,65,70,25,60,83,33,92,81,43,24,47,43,68,80,17,57,87,67,87 while q~=52 do if cs>=310 then if cs>=434 then if cs<=462 then if cs<458 then cs=462 dc[49]=-dc[66]else cs=507 dc[22]=-dc[41]end else if cs<534 then cs=538 cl[j]=dc;else q=52;end end else if cs<=332 then if cs>317 then cs=360 do dc[50]=bu(ct,12,20);end else cs=332 do dc[66]=bu(ct,3,11);end end else if cs<377 then dc[41]=bu(ct,21,29);cs=385 else cs=434 dc[96]=bu(db,12,33);end end end else if cs<=147 then if cs<=67 then if cs<60 then ct,db,dc=nil cs=67 else cs=98 dc={}end else if cs>101 then ct=by()cs=166 else cs=147 dc[69]=cp();end end else if cs>=250 then if cs>253 then dc[60]=bu(db,1,11);cs=310 else dc[26]=bu(ct,1,2);cs=289 end else if cs>174 then do dc[149]=cp();end cs=250 else cs=204 db=by()end end end end end end end end else if cu>=142 then if cu<185 then cu=187 do cy={}end else cu=217 cv={}end else if cu>56 then da={}cu=142 else cu=100 cv,cw,cx,cy,cz,da=nil end end end end end end bg=1197 end else if bg<=1248 then br=function(j,q,cs,ct,ct,ct)local ct,cu,cv,cw,cx do cx=bx end do cw=j[27]end do ct=j[186]end cv=j[24]cu=j[79]return function(...)local j,cx,cy,cz,da,db,dc,dd,de cx=1 dd=-1 da=-1 dc={}do de={...}end cy=(ci(f,...)-1)cz={}j={}for f=0,cy do do if(not(f<cv))then dc[(f-cv)]=de[(f+1)];else j[f]=de[(f+1)];end;end end;do db=(cy-cv+1)end while true do local f,cv,cy,da,db,dc,de,df,dg,dh do cy=cu[cx]end cv=cy[60]da=cy[69]dh=cy[66]df=cy[50]de=cy[41]do f=cy[149]end dg=cy[49]do dc=cy[96]end do db=cy[22]end if not(cv>21)then if not(cv>10)then if not(cv<5)then if not(cv<8)then if not(cv>8)then do j[db]=(function()j[cy[66]]=br(cw[df],nil,cs);end)end else if 9==cv then local da,db,df,dg db=dh do da,df=ca(j[db](bi(j,(db+1),dc)))end dd=(df+db-1)dg=0 for df=db,dd do do dg=(dg+1);end do j[df]=da[dg];end end;else cu[cx]={[66]=bd,[41]=2,[96]=2,[149]=0,[60]=cv- -30};cx=(cx-1);end end else if not(cv<6)then if 6==cv then j[dh]=(not(dc==0));else local bd,da da=dh do bd=j[cy[96]]end j[(da+1)]=bd;do j[da]=bd[ct[de]];end end else cx=((ct[dh]==ct[de])and dc or cx)end end else if not(cv<2)then if not(cv<a)then if(cv<4)then j[dh]=(j[cy[96]]/j[de]);else local a a={}if(#cz>w)then for w=1,#cz do local bd bd=cz[w]for w=0,#bd do local da,db,df df=bd[w]da=df[1]db=df[2]if(da==j and db>=0)then a[db]=da[db]df[1]=a end end end end return j[(dh+1)],j[(dh+2)];end else while((j[dh]==ct[de]))do cx=dc;break end end else if(cv<1)then cu[cx]={[41]=2,[k]=0,[66]=7,[96]=2,[60]=cv- -40};cx=(cx-1);else j[cy[66]]=cs[ct[dc]];end end end else if not(cv<16)then if not(cy[60]<19)then if not(cv>19)then do j[cy[66]]=(not j[dc]);end else if(cv<21)then j[dh]=j[dc][ct[de]];else j[dh]=q[dc];end end else do if not(cv>16)then do cu[cx]=cl[f];end cx=cy[96];else do if(cv>17)then while not j[cy[66]]do cx=dc;break end else j[dh]=j[dc];end end end end end else do if not(cv<13)then if not(cy[60]>13)then local a a=cy[66]do j[a](bi(j,(a+1),dc))end else if not(cv~=14)then j[dh]=(j[cy[96]]%j[de]);else cu[cx]={[96]=52,[66]=16,[41]=95,[149]=0,[60]=cy[60]- -23};cx=(cx-1);end end else if(cy[60]>11)then return j[dh]();else if j[dh]then cx=dc;end;end end end end end else do if not(cv>32)then if not(cv>t)then if not(cv>23)then do if(cy[60]<23)then j[dh]=br(cw[dc],nil,cs);else j[dh]();end end else do if not(cv<25)then if(cv>25)then do j[dh]=(j[cy[96]]-j[de]);end else end else do cx=dc;end end end end else if not(cv>29)then do if not(cv<28)then if(cv>28)then j[dh]=cs;else local a a=dh j[a]=j[a](bi(j,a+1,dc));end else q[dc]=j[dh];end end else if not(cv>i)then local a do a=dh end j[a]=j[a](bi(j,a+1,dd));else if(cv<32)then cu[cx]={[96]=7,[66]=7,[v]=12,[149]=0,[60]=cv-11};cx=(cx-1);else local a,f,i i=cw[dc]f=nil a={}f=bp({},{__index=function(k,k)local k=a[k];return k[1][k[2]];end,__newindex=function(k,k,t)local k=a[k]k[1][k[2]]=t;end;});for k=1,de do local t t=cy[136][k]if t[1]then a[(k-1)]={j,t[2],nil};else do a[(k-1)]={q,t[2],nil,nil};end end;cz[(#cz+1)]=a;end;j[dh]=br(i,f,cs);end end end end else do if not(cv>38)then if not(cv>35)then if not(cv>p)then else if not(cv~=34)then j[dh][ct[dc]]=j[cy[41]];else do j[cy[66]]=(j[cy[96]]+j[cy[41]]);end end end else if not(cv>36)then do j[dh][ct[dc]]=ct[de];end else if(cv>37)then j[cy[66]]=ct[dc]else do cu[cx]={[66]=7,[149]=0,[96]=7,[41]=6,[60]=cv-23};end cx=(cx-1);end end end else if not(cv>41)then if not(cv<40)then if 40==cv then local a a=dh j[a]=j[a](j[a+1]);else cs[ct[dc]]=j[dh];end else j[dh]=(j[dc]*j[de]);end else if not(cv<43)then do if(cv>43)then local a do a={}end if(#cz>0)then for f=1,#cz do local i i=cz[f]for f=0,#i do local k,p,q q=i[f]k=q[1]p=q[2]if(k==j and p>=0)then a[p]=k[p]do q[1]=a end end end end end return bi(j,A,dd);else ct=bx[cy[66]](ct)end end else cu[cx]={[96]=2,[60]=cv-2,[149]=0,[41]=2,[66]=8};cx=(cx-bc);end end end end end end end cx=(cx+1);end;end;end bg=1287 else if bg<1313 then bg=1318 return br(cm(bs()),{},bs())();else bf=63;end end end else if bg<=1037 then if bg>1000 then cn=function()local a,f,i,j,k,p,q,t=84,59,83,38,48,25,33,96,67,25,35,15,68,79,52,32,91,20 while a~=48 do if f<=191 then if f>=126 then if f>=163 then if f<187 then f=191 if((q==0 and i==0))then return 0 end else k=((-1)^bl(31,i,1))f=233 end else i=by()f=163 end else if f>61 then q=by()f=126 else i,j,k,p,q,t=nil f=86 end end else if f>=301 then if f>=328 then if f<354 then f=356 do return(k*(2^(p-1023))*(j/bh+t))end else break end else if not(p~=0)then if not(j==0)then p=1 t=o else return(k*0)end elseif 2047~=p then else do if not(j~=0)then do do return(k*(0/0))end end else do return(k*(1/0))end end end end f=328 end else if f>=250 then if f<271 then do j=(bl(0,i,20)*4294967296+q)end f=274 else t=1 f=301 end else f=250 p=bl(20,i,11)end end end end end bg=1068 else bn=function()local a,f do f,a=bj(bk,bz,(bz+2))end bz=(bz+2);do return((a*256)+f);end end bg=1037 end else if bg>=1086 then if bg>1095 then do cl={}end bg=1162 else bg=1128 ca=function(...)return{...},ci('#',...)end end else bg=1086 do bv=function(a,a,a,a)local a,f,i,j=90,44,71,71,13,62,97,31,15,30,25,11 while a~=41 do if f>=110 then if f>=139 then if f<162 then f=171 return i;else break end else bz=(bz+j);f=139 end else if f>=62 then if f>67 then i=bk:sub(bz,(bz+j-1))f=110 else j=by()f=90 end else i,j=nil f=62 end end end end end end end end else if bg<=820 then if bg>=763 then if bg<=763 then ch=2 bg=798 else if bg<815 then bg=820 for a=1,31 do bq[a]=ch ch=(ch*2)end else do bl=function(a,f,i,j)local j,k,o=48,68,72,92,17,98,78,52,87,99,62,59,85,77,39,46 while j~=26 do if k<=154 then if k>=112 then if k>121 then k=180 o=((f/bq[a])%bq[i])else k=154 o=m end else o=nil k=112 end else if k<=180 then k=225 do o=(o-o%1)end else if k>232 then break else k=242 return o end end end end end end bg=835 end end else if bg<716 then bg=720 do bh=(2^52)end else bq={[0]=1}bg=763 end end else if bg>=894 then if bg<=894 then bg=942 bz=c else if bg<978 then bg=983 by=function()local a,c,f,i c,a,i,f=bj(bk,bz,(bz+3))bz=(bz+4);do return((f*be)+(i*65536)+(a*256)+c);end end else bg=998 do cp=function()local a a=bj(bk,bz,bz)bz=(bz+1);return a;end end end end else if bg<847 then bg=853 cd=(bit_lib and bit_lib.bxor or function(a,c)a=a%(2^32)c=c%(2^32)local f,i=0,1 while a>0 and c>0 do local j,k=a%16,c%16 f=f+bo[j+1][k+1]*i a=(a-j)/16 c=(c-k)/16 i=i*16 end f=f+a*i+c*i return f end)else bg=894 bu=function(a,c,f,i)local i i=((a/2^(c-1))%2^((f-1)-(c-1)+1))return(i-i%1);end end end end end else if bg>=336 then if bg<=454 then if bg<=374 then if bg>343 then bg=394 bm=type else bg=374 ci=select end else if bg>=427 then if bg>430 then bg=493 bi=(unpack or table.unpack)else bg=454 cb=math.abs end else bg=427 cf=(function(a,c)if'number'==bm(a)then do return true end else return false end end)end end else if bg<=527 then if bg<=493 then bt=tonumber bg=512 else if bg>519 then bg=569 do for a=0,255 do cc[a]=cj(a);end end else bg=527 cc={}end end else if bg>=602 then if bg<646 then bo={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,bb,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,r,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,e,0,3,2,13,12,15,14,9,8,11,g,},{6,7,4,5,2,3,0,1,u,15,12,13,10,11,8,9,},{7,d,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,h,6,},{10,11,8,l,14,15,12,13,2,s,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,y,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,ba,3,0,1,},{15,b,13,12,11,10,z,8,7,6,5,4,n,2,1,x,},nil}bg=650 else co=''bg=698 end else do bk=ckfunction(a,b)return cc[bt(a,16)]end)end bg=602 end end end else if bg<=160 then if bg<=73 then if bg<71 then bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil bg=73 else bj=string.byte bg=120 end else if bg<=120 then bg=141 cj=string.char else if bg<155 then bg=160 bw=string.sub else ck=string.gsub bg=207 end end end else if bg>=245 then if bg>=279 then if bg>286 then bp=setmetatable bg=336 else bg=296 do bs=(getfenv or function()return _ENV end)end end else ce=math.ldexp bg=279 end else if bg>215 then bg=245 cq=table.insert else bg=229 cg=table.concat end end end end end end end)(3,14,1,6,1,'#',10,7,30,22,149,9,nil,3,0,33,66,13,3,26,14,41,0,0,1,9,2,8,1,7,16777216)